# This shows how to use lualatex (http://en.wikipedia.org/wiki/LuaTeX)
# with latexmk.
#
#   WARNING: The method shown here is suitable only for ver. 4.51 and
#            later of latexmk, not for earlier versions.
#

#$pdf_mode = 4;
#$lualatex = "lualatex --synctex=1 %O %S";
# Use shell-escape option,
# This option is required by minted package
# or svg package with inkscape option.
#$lualatex = "lualatex --synctex=1 %O --shell-escape %S";
#$postscript_mode = $dvi_mode = 0;

# This method is suitable for latexmk 4.41
#$pdflatex = "lualatex --synctex=1 %O %S";
$pdflatex = "pdflatex -synctex=1 %O %S";
# Use shell-escape option,
# This option is required by minted package
# or svg package with inkscape option.
#$pdflatex = "pdflatex -synctex=1 %O -shell-escape %S";
$pdf_mode = 1;
$postscript_mode = $dvi_mode = 0;

@default_files = ("csp_thesis-fr");
$do_cd = 1;

# Handle pdfx file metadata.
# xmp metadata source are written directly in source file
# and xmp files are generated on the fly and then included in the pdf.
push @generated_exts, 'xmpdata';

# Handle glossary.
# Examples taken from latexmk example_rcfiles:
# https://ctan.org/tex-archive/support/latexmk/example_rcfiles
# http://mirrors.ctan.org/support/latexmk/example_rcfiles/glossary_latexmkrc
# and from:
# https://tex.stackexchange.com/questions/1226/
# how-to-make-latexmk-use-makeglossaries/44316#44316

add_cus_dep('glo', 'gls', 0, 'makeglossaries');
add_cus_dep('acn', 'acr', 0, 'makeglossaries');

sub makeglossaries {
  my ($base_name, $path) = fileparse( $_[0] );
  pushd $path;
  my $return = system "makeglossaries $base_name";
  popd;
  return $return;
}

push @generated_exts, 'glo', 'gls', 'glg', 'glsdefs';
push @generated_exts, 'acn', 'acr', 'alg';
# If glossaries package is configured to use xindy
push @generated_exts, 'xdy';

# Handle list of listings file
# generated by listings package.
#
# The file has the extension lol.
#
# There are packages, such as listings and ccaption,
# that provide new Listof lists.
# These can be handled by the tocbibind package
# in a similar manner to the usual Listofs.
# Two examples are given below.
# The listings package version 0.2 provides a \lstlistoflistings command
# to print a list of listings.
# The header name for this list is in \lstlistingname
# and the listing file has the extension lol.
# This can be treated just like the \listoffigure, etc., commands.
# To add the List of Listings header to the ToC do:
#   \renewcommand{\lstlistoflistings}{\begingroup
#   \tocfile{\lstlistingname}{lol}
#   \endgroup}
# See tocbibind documentation file tocbibind.pdf,
# v1.5k, 2010/10/13, section 2.3, page 5.
#
# See also:
# https://tex.stackexchange.com/a/331126
# or
# https://tex.stackexchange.com/questions/97474/
# how-to-add-lstlistoflistings-to-the-table-of-contents/331126#331126
push @generated_exts, 'lol';

# Allow bbl file, generated by biblatex, to be deleted.
$bibtex_use = 2;
# Handle logreq files:
# logreq is called by biblatex.
push @generated_exts, 'run.xml';

# Handle minitoc auxiliary files.
# The list is obtained from minitoc pdf guide, page 55, table 1.11.
push @generated_exts, 'maf', 'mtc', 'ptc[0-9]*', 'pl[ft][0-9]*', 'mtc[0-9]*',
                      'ml[ft][0-9]*', 'stc[0-9]*', 'sl[ft][0-9]*';

# Clean extra aux files: synctex aux file.
$clean_ext = "%R.synctex.gz";
